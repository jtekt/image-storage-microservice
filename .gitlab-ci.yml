stages:
  - build
  - test

image: moreillon/tdd-dind

services:
  - name: docker:19.03.12-dind
    command: ["--insecure-registry=172.16.98.151:5000"]

variables:
  APPLICATION_NAME: image-storage-mongoose

  CONTAINER_IMAGE: ${DOCKER_HUB_USERNAME}/${APPLICATION_NAME}
  CONTAINER_IMAGE_TEST: ${CONTAINER_IMAGE}:test
  CONTAINER_IMAGE_TAGGED: ${CONTAINER_IMAGE}:${CI_COMMIT_SHORT_SHA}

  # CONTAINER_IMAGE_DOCKER_HUB: ${DOCKER_HUB_USERNAME}/${APPLICATION_NAME}
  # CONTAINER_IMAGE_DOCKER_HUB_TAGGED: ${CONTAINER_IMAGE_DOCKER_HUB}:${CI_COMMIT_SHORT_SHA}

  TEST_NETWORK: tdd
  TEST_DB: tdd-db


build-x86:
  stage: build
  only:
    - master
    - mongoose
  tags:
    - dind
  script:
    - docker build -t ${CONTAINER_IMAGE_TEST} .
    - docker push ${CONTAINER_IMAGE_TEST}
    # Cleanup
    - docker image rm ${CONTAINER_IMAGE_TEST}


test:
  stage: test
  only:
    - master
    - mongoose
  tags:
    - dind
  before_script:
    - >
     if [ -z ${DOCKER_HUB_USERNAME} ];
     then echo "No Docker login" -;
     else echo "${DOCKER_HUB_PASSWORD}" | docker login --username ${DOCKER_HUB_USERNAME} --password-stdin ;
     fi
    # Creating network for TDD
    - docker network create ${TEST_NETWORK}
    # Creating DB container in network
    - >
      docker run --rm -d
      --name ${TEST_DB}
      --network ${TEST_NETWORK}
      --hostname ${TEST_DB}
      mongo

  script:
    # Run tests
    - >
      docker run
      --rm
      --name tdd-app
      --network ${TEST_NETWORK}
      -e MONGODB_URL=mongodb://${TEST_DB}
      ${CONTAINER_IMAGE_TEST}
      npm run coverage
    # Tag
    - docker tag ${CONTAINER_IMAGE_TEST} ${CONTAINER_IMAGE}
    - docker tag ${CONTAINER_IMAGE_TEST} ${CONTAINER_IMAGE_TAGGED}
    # - docker tag ${CONTAINER_IMAGE_TEST} ${CONTAINER_IMAGE_DOCKER_HUB}
    # - docker tag ${CONTAINER_IMAGE_TEST} ${CONTAINER_IMAGE_DOCKER_HUB_TAGGED}
    # Push
    - docker push ${CONTAINER_IMAGE}
    - docker push ${CONTAINER_IMAGE_TAGGED}
    # - docker push ${CONTAINER_IMAGE_DOCKER_HUB}
    # - docker push ${CONTAINER_IMAGE_DOCKER_HUB_TAGGED}
