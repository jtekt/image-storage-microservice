stages:
    - build
    - test
    - release

image: moreillon/tdd-dind
services:
    - name: docker:24.0.7-dind

variables:
    APPLICATION_NAME: image-storage-service
    AWS_ECR_PUBLIC_URL: public.ecr.aws/u6l4m3e5

    CONTAINER_IMAGE: ${AWS_ECR_PUBLIC_URL}/${APPLICATION_NAME}
    CONTAINER_IMAGE_TEST_X86: ${CONTAINER_IMAGE}:test
    CONTAINER_IMAGE_TEST_AARCH64: ${CONTAINER_IMAGE}:aarch64-test
    CONTAINER_IMAGE_TAGGED_X86: ${CONTAINER_IMAGE}:${CI_COMMIT_TAG}
    CONTAINER_IMAGE_TAGGED_AARCH64: ${CONTAINER_IMAGE}:aarch64-${CI_COMMIT_TAG}

    TEST_NETWORK: tdd
    TEST_DB: tdd-db

build-x86:
    stage: build
    only:
        - tags
    tags:
        - dind
    before_script:
        - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ECR_PUBLIC_URL}
    script:
        - docker build -t ${CONTAINER_IMAGE_TEST_X86} .
        - docker push ${CONTAINER_IMAGE_TEST_X86}

build-aarch64:
    stage: build
    tags:
        - aarch64
    only:
        - tags
    before_script:
        - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ECR_PUBLIC_URL}
    script:
        - docker build -f Dockerfile-aarch64 -t ${CONTAINER_IMAGE_TEST_AARCH64} .
        - docker push ${CONTAINER_IMAGE_TEST_AARCH64}

test-x86:
    stage: test
    coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
    only:
        - tags
    tags:
        - dind
    before_script:
        - docker network create ${TEST_NETWORK}
        - >
            docker run --rm -d
            --name ${TEST_DB}
            --network ${TEST_NETWORK}
            --hostname ${TEST_DB}
            mongo:4
    script:
        - >
            docker run
            --rm
            --name tdd-app
            --network ${TEST_NETWORK}
            -e MONGODB_URL=mongodb://${TEST_DB}
            -e S3_ACCESS_KEY_ID=$S3_ACCESS_KEY_ID
            -e S3_SECRET_ACCESS_KEY=$S3_SECRET_ACCESS_KEY
            -e S3_REGION=ap-northeast-1
            -e S3_ENDPOINT=s3.amazonaws.com
            -e S3_USE_SSL=true
            -e S3_PORT=443
            ${CONTAINER_IMAGE_TEST_X86}
            npm run coverage

release-x86:
    stage: release
    only:
        - tags
    tags:
        - dind
    before_script:
        - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ECR_PUBLIC_URL}
    script:
        - docker pull ${CONTAINER_IMAGE_TEST_X86}
        - docker tag ${CONTAINER_IMAGE_TEST_X86} ${CONTAINER_IMAGE}
        - docker tag ${CONTAINER_IMAGE_TEST_X86} ${CONTAINER_IMAGE_TAGGED_X86}
        - docker push ${CONTAINER_IMAGE}
        - docker push ${CONTAINER_IMAGE_TAGGED_X86}

release-aarch64:
    stage: release
    only:
        - tags
    tags:
        - dind
    before_script:
        - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ECR_PUBLIC_URL}
    script:
        - docker pull ${CONTAINER_IMAGE_TEST_AARCH64}
        - docker tag ${CONTAINER_IMAGE_TEST_AARCH64} ${CONTAINER_IMAGE_TAGGED_AARCH64}
        - docker push ${CONTAINER_IMAGE_TAGGED_AARCH64}
